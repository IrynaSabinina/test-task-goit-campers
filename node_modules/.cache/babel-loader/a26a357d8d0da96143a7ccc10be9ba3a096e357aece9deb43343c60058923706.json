{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\nexport const campersSelector = state => state.campers.items;\nexport const filterSelector = state => state.filter;\nexport const isLoadingSelector = state => state.campers.isLoading;\nexport const errorSelector = state => state.campers.error;\nexport const selectCategory = createSelector([campersSelector, filterSelector], (campers, filter) => {\n  const campersinTheList = campers.filter(camper => camper.details.toLowerCase().includes(filter.toLowerCase()));\n  return campersinTheList;\n});","map":{"version":3,"names":["createSelector","campersSelector","state","campers","items","filterSelector","filter","isLoadingSelector","isLoading","errorSelector","error","selectCategory","campersinTheList","camper","details","toLowerCase","includes"],"sources":["/Users/sabinina/myprojects/test-task-goit/src/redux/selectors.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nexport const campersSelector = (state) => state.campers.items;\n\nexport const filterSelector = (state) => state.filter;\n\nexport const isLoadingSelector = (state) => state.campers.isLoading;\n\nexport const errorSelector = (state) => state.campers.error;\n\nexport const selectCategory = createSelector(\n  [campersSelector, filterSelector],\n  (campers, filter) => {\n    const campersinTheList = campers.filter((camper) =>\n      camper.details.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return campersinTheList;\n  }\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAO,MAAMC,eAAe,GAAIC,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,KAAK;AAE7D,OAAO,MAAMC,cAAc,GAAIH,KAAK,IAAKA,KAAK,CAACI,MAAM;AAErD,OAAO,MAAMC,iBAAiB,GAAIL,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACK,SAAS;AAEnE,OAAO,MAAMC,aAAa,GAAIP,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACO,KAAK;AAE3D,OAAO,MAAMC,cAAc,GAAGX,cAAc,CAC1C,CAACC,eAAe,EAAEI,cAAc,CAAC,EACjC,CAACF,OAAO,EAAEG,MAAM,KAAK;EACnB,MAAMM,gBAAgB,GAAGT,OAAO,CAACG,MAAM,CAAEO,MAAM,IAC7CA,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,MAAM,CAACS,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,OAAOH,gBAAgB;AACzB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}